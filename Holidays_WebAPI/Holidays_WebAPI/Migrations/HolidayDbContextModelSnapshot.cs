// <auto-generated />
using Holidays_WebAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Holidays_WebAPI.Migrations
{
    [DbContext(typeof(HolidayDbContext))]
    partial class HolidayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DateFrom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DateTo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.CountryMax", b =>
                {
                    b.Property<int>("CountryMaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("MaxNumber")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CountryMaxId");

                    b.ToTable("CountryMax");
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.Holiday", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HolidayType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("HolidayId");

                    b.ToTable("Holidays");
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.HolidayType", b =>
                {
                    b.Property<int>("HolidayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("HolidayTypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("HolidayId");

                    b.HasIndex("CountryId");

                    b.ToTable("HolidayTypes");
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.Name", b =>
                {
                    b.Property<int>("NameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HolidayId")
                        .HasColumnType("int");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("NameId");

                    b.HasIndex("HolidayId");

                    b.ToTable("Names");
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RegionId");

                    b.HasIndex("CountryId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.HolidayType", b =>
                {
                    b.HasOne("Holidays_WebAPI.Models.DbModels.Country", null)
                        .WithMany("HolidayTypes")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.Name", b =>
                {
                    b.HasOne("Holidays_WebAPI.Models.DbModels.Holiday", null)
                        .WithMany("Names")
                        .HasForeignKey("HolidayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.Region", b =>
                {
                    b.HasOne("Holidays_WebAPI.Models.DbModels.Country", null)
                        .WithMany("Regions")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.Country", b =>
                {
                    b.Navigation("HolidayTypes");

                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Holidays_WebAPI.Models.DbModels.Holiday", b =>
                {
                    b.Navigation("Names");
                });
#pragma warning restore 612, 618
        }
    }
}
